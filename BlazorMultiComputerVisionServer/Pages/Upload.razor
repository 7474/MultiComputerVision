@page "/upload"

@using BlazorMultiComputerVisionServer.Service
@inject IUploadService UploadService
@inject AzureImageDetectService AzureImageDetectService
@inject AwsImageDetectService AwsImageDetectService
@inject IResultRepositoryService ResultRepositoryService
@inject NavigationManager NavigationManager

<h1>コンピュータの目に判断を仰ぐ</h1>
<div class="alert alert-info" role="alert">
    画像を選択すると判断してくれます。
</div>
<InputFile OnChange="HandleFileSelected" />
<div>
    <p>@Message</p>
</div>

@code {
    System.IO.FileStream SelectedFileStream { set; get; }
    double PercentageProgress { set; get; }
    string Message { get; set; }

    async Task HandleFileSelected(IFileListEntry[] files)
    {
        try
        {
            // TODO 画像サイズはノーマライズしたい
            // TODO 画像以外はアップロード駄目だろう
            // TODO ディレクトリ指定できた方が管理上良さそう
            // TODO オーナー名、認証されたユーザーに
            // TODO そもそも認証されたユーザーだけ使えるように
            Message = "Processing...";
            var file = files.First();

            var blob = await UploadService.UploadFile(file.Data, file.Name, true);
            var azureResult = await AzureImageDetectService.Detect(blob.Uri.ToString());
            var awsResult = await AwsImageDetectService.Detect(blob.Uri.ToString());

            var doc = ResultRepositoryService.BuildResult("koudenpa", blob, new IImageDetectResult[] { azureResult, awsResult });
            await ResultRepositoryService.Put(doc);

            Message = "Complete!";

            NavigationManager.NavigateTo($"/results/{doc.Id.ToString()}");
        }
        catch (Exception ex)
        {
            Message = ex.Message + " ... " + ex.StackTrace;
        }
    }
}
